// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/MessageContainer.proto

#include "MessageContainer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fMessageContainer_2eproto {
    extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fMessageContainer_2eproto ::google::protobuf::internal::SCCInfo <0> scc_info_InternalMessageContainer_Header;
    extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fMessageContainer_2eproto ::google::protobuf::internal::SCCInfo <0> scc_info_MessageContainer_Header;
}  // namespace protobuf_proto_2fMessageContainer_2eproto
namespace proto {
    class MessageContainer_HeaderDefaultTypeInternal {
    public:
        ::google::protobuf::internal::ExplicitlyConstructed <MessageContainer_Header>
                _instance;
    } _MessageContainer_Header_default_instance_;

    class MessageContainerDefaultTypeInternal {
    public:
        ::google::protobuf::internal::ExplicitlyConstructed <MessageContainer>
                _instance;
    } _MessageContainer_default_instance_;

    class InternalMessageContainer_HeaderDefaultTypeInternal {
    public:
        ::google::protobuf::internal::ExplicitlyConstructed <InternalMessageContainer_Header>
                _instance;
    } _InternalMessageContainer_Header_default_instance_;

    class InternalMessageContainerDefaultTypeInternal {
    public:
        ::google::protobuf::internal::ExplicitlyConstructed <InternalMessageContainer>
                _instance;
    } _InternalMessageContainer_default_instance_;

    class AckDefaultTypeInternal {
    public:
        ::google::protobuf::internal::ExplicitlyConstructed <Ack>
                _instance;
    } _Ack_default_instance_;

    class PingDefaultTypeInternal {
    public:
        ::google::protobuf::internal::ExplicitlyConstructed <Ping>
                _instance;
    } _Ping_default_instance_;

    class PongDefaultTypeInternal {
    public:
        ::google::protobuf::internal::ExplicitlyConstructed <Pong>
                _instance;
    } _Pong_default_instance_;
}  // namespace proto
namespace protobuf_proto_2fMessageContainer_2eproto {
    static void InitDefaultsMessageContainer_Header() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void *ptr = &::proto::_MessageContainer_Header_default_instance_;
            new(ptr) ::proto::MessageContainer_Header();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::MessageContainer_Header::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo <0> scc_info_MessageContainer_Header =
            {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageContainer_Header},
             {}};

    static void InitDefaultsMessageContainer() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void *ptr = &::proto::_MessageContainer_default_instance_;
            new(ptr) ::proto::MessageContainer();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::MessageContainer::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo <1> scc_info_MessageContainer =
            {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessageContainer},
             {
                     &protobuf_proto_2fMessageContainer_2eproto::scc_info_MessageContainer_Header.base,}};

    static void InitDefaultsInternalMessageContainer_Header() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void *ptr = &::proto::_InternalMessageContainer_Header_default_instance_;
            new(ptr) ::proto::InternalMessageContainer_Header();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::InternalMessageContainer_Header::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo <0> scc_info_InternalMessageContainer_Header =
            {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInternalMessageContainer_Header},
             {}};

    static void InitDefaultsInternalMessageContainer() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void *ptr = &::proto::_InternalMessageContainer_default_instance_;
            new(ptr) ::proto::InternalMessageContainer();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::InternalMessageContainer::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo <1> scc_info_InternalMessageContainer =
            {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInternalMessageContainer},
             {
                     &protobuf_proto_2fMessageContainer_2eproto::scc_info_InternalMessageContainer_Header.base,}};

    static void InitDefaultsAck() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void *ptr = &::proto::_Ack_default_instance_;
            new(ptr) ::proto::Ack();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::Ack::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo <0> scc_info_Ack =
            {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAck},
             {}};

    static void InitDefaultsPing() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void *ptr = &::proto::_Ping_default_instance_;
            new(ptr) ::proto::Ping();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::Ping::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo <0> scc_info_Ping =
            {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPing},
             {}};

    static void InitDefaultsPong() {
        GOOGLE_PROTOBUF_VERIFY_VERSION;

        {
            void *ptr = &::proto::_Pong_default_instance_;
            new(ptr) ::proto::Pong();
            ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
        }
        ::proto::Pong::InitAsDefaultInstance();
    }

    ::google::protobuf::internal::SCCInfo <0> scc_info_Pong =
            {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPong},
             {}};

    void InitDefaults() {
        ::google::protobuf::internal::InitSCC(&scc_info_MessageContainer_Header.base);
        ::google::protobuf::internal::InitSCC(&scc_info_MessageContainer.base);
        ::google::protobuf::internal::InitSCC(&scc_info_InternalMessageContainer_Header.base);
        ::google::protobuf::internal::InitSCC(&scc_info_InternalMessageContainer.base);
        ::google::protobuf::internal::InitSCC(&scc_info_Ack.base);
        ::google::protobuf::internal::InitSCC(&scc_info_Ping.base);
        ::google::protobuf::internal::InitSCC(&scc_info_Pong.base);
    }

    ::google::protobuf::Metadata file_level_metadata[7];

    const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            ~0u,  // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::MessageContainer_Header, _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::MessageContainer_Header, id_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::MessageContainer_Header, actionid_),
            ~0u,  // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::MessageContainer, _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::MessageContainer, header_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::MessageContainer, message_),
            ~0u,  // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::InternalMessageContainer_Header, _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::InternalMessageContainer_Header, id_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::InternalMessageContainer_Header, actionid_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::InternalMessageContainer_Header, socketid_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::InternalMessageContainer_Header, partition_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::InternalMessageContainer_Header, userid_),
            ~0u,  // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::InternalMessageContainer, _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::InternalMessageContainer, header_),
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::InternalMessageContainer, message_),
            ~0u,  // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Ack, _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Ack, id_),
            ~0u,  // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Ping, _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Ping, time_),
            ~0u,  // no _has_bits_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Pong, _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Pong, time_),
    };
    static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            {0,  -1, sizeof(::proto::MessageContainer_Header)},
            {7,  -1, sizeof(::proto::MessageContainer)},
            {14, -1, sizeof(::proto::InternalMessageContainer_Header)},
            {24, -1, sizeof(::proto::InternalMessageContainer)},
            {31, -1, sizeof(::proto::Ack)},
            {37, -1, sizeof(::proto::Ping)},
            {43, -1, sizeof(::proto::Pong)},
    };

    static ::google::protobuf::Message const *const file_default_instances[] = {
            reinterpret_cast<const ::google::protobuf::Message *>(&::proto::_MessageContainer_Header_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message *>(&::proto::_MessageContainer_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message *>(&::proto::_InternalMessageContainer_Header_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message *>(&::proto::_InternalMessageContainer_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message *>(&::proto::_Ack_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message *>(&::proto::_Ping_default_instance_),
            reinterpret_cast<const ::google::protobuf::Message *>(&::proto::_Pong_default_instance_),
    };

    void protobuf_AssignDescriptors() {
        AddDescriptors();
        AssignDescriptors(
                "proto/MessageContainer.proto", schemas, file_default_instances, TableStruct::offsets,
                file_level_metadata, NULL, NULL);
    }

    void protobuf_AssignDescriptorsOnce() {
        static ::google::protobuf::internal::once_flag once;
        ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
    }

    void protobuf_RegisterTypes(const ::std::string &) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;

    void protobuf_RegisterTypes(const ::std::string &) {
        protobuf_AssignDescriptorsOnce();
        ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
    }

    void AddDescriptorsImpl() {
        InitDefaults();
        static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
                "\n\034proto/MessageContainer.proto\022\005proto\032\025p"
                "roto/ActionMap.proto\"\215\001\n\020MessageContaine"
                "r\022.\n\006header\030\002 \001(\0132\036.proto.MessageContain"
                "er.Header\022\017\n\007message\030\003 \001(\014\0328\n\006Header\022\n\n\002"
                "id\030\001 \001(\t\022\"\n\010actionId\030\002 \001(\0162\020.proto.Actio"
                "nMap\"\322\001\n\030InternalMessageContainer\0226\n\006hea"
                "der\030\002 \001(\0132&.proto.InternalMessageContain"
                "er.Header\022\017\n\007message\030\004 \001(\014\032m\n\006Header\022\n\n\002"
                "id\030\001 \001(\t\022\"\n\010actionId\030\002 \001(\0162\020.proto.Actio"
                "nMap\022\020\n\010socketId\030\003 \001(\t\022\021\n\tpartition\030\004 \001("
                "\t\022\016\n\006userId\030\005 \001(\t\"\021\n\003Ack\022\n\n\002id\030\001 \001(\t\"\024\n\004"
                "Ping\022\014\n\004time\030\001 \001(\005\"\024\n\004Pong\022\014\n\004time\030\001 \001(\005"
                "B\'\n\016org.elec.protoB\025MessageContainerProt"
                "ob\006proto3"
        };
        ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
                descriptor, 529);
        ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
                "proto/MessageContainer.proto", &protobuf_RegisterTypes);
        ::protobuf_proto_2fActionMap_2eproto::AddDescriptors();
    }

    void AddDescriptors() {
        static ::google::protobuf::internal::once_flag once;
        ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
    }

// Force AddDescriptors() to be called at dynamic initialization time.
    struct StaticDescriptorInitializer {
        StaticDescriptorInitializer() {
            AddDescriptors();
        }
    } static_descriptor_initializer;
}  // namespace protobuf_proto_2fMessageContainer_2eproto
namespace proto {

// ===================================================================

    void MessageContainer_Header::InitAsDefaultInstance() {
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int MessageContainer_Header::kIdFieldNumber;
    const int MessageContainer_Header::kActionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

    MessageContainer_Header::MessageContainer_Header()
            : ::google::protobuf::Message(), _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
                &protobuf_proto_2fMessageContainer_2eproto::scc_info_MessageContainer_Header.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:proto.MessageContainer.Header)
    }

    MessageContainer_Header::MessageContainer_Header(const MessageContainer_Header &from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (from.id().size() > 0) {
            id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
        }
        actionid_ = from.actionid_;
        // @@protoc_insertion_point(copy_constructor:proto.MessageContainer.Header)
    }

    void MessageContainer_Header::SharedCtor() {
        id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        actionid_ = 0;
    }

    MessageContainer_Header::~MessageContainer_Header() {
        // @@protoc_insertion_point(destructor:proto.MessageContainer.Header)
        SharedDtor();
    }

    void MessageContainer_Header::SharedDtor() {
        id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    void MessageContainer_Header::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }

    const ::google::protobuf::Descriptor *MessageContainer_Header::descriptor() {
        ::protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
    }

    const MessageContainer_Header &MessageContainer_Header::default_instance() {
        ::google::protobuf::internal::InitSCC(&protobuf_proto_2fMessageContainer_2eproto::scc_info_MessageContainer_Header.base);
        return *internal_default_instance();
    }


    void MessageContainer_Header::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MessageContainer.Header)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        actionid_ = 0;
        _internal_metadata_.Clear();
    }

    bool MessageContainer_Header::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream *input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:proto.MessageContainer.Header)
        for (;;) {
            ::std::pair <::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if (!p.second) goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
                // string id = 1;
                case 1: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                                input, this->mutable_id()));
                        DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                                this->id().data(), static_cast<int>(this->id().length()),
                                ::google::protobuf::internal::WireFormatLite::PARSE,
                                "proto.MessageContainer.Header.id"));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                    // .proto.ActionMap actionId = 2;
                case 2: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
                        int value;
                        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive <
                                int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                                input, &value)));
                        set_actionid(static_cast< ::proto::ActionMap >(value));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                    handle_unusual:
                    if (tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                            input, tag, _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
        success:
        // @@protoc_insertion_point(parse_success:proto.MessageContainer.Header)
        return true;
        failure:
        // @@protoc_insertion_point(parse_failure:proto.MessageContainer.Header)
        return false;
#undef DO_
    }

    void MessageContainer_Header::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream *output) const {
        // @@protoc_insertion_point(serialize_start:proto.MessageContainer.Header)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // string id = 1;
        if (this->id().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->id().data(), static_cast<int>(this->id().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.MessageContainer.Header.id");
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                    1, this->id(), output);
        }

        // .proto.ActionMap actionId = 2;
        if (this->actionid() != 0) {
            ::google::protobuf::internal::WireFormatLite::WriteEnum(
                    2, this->actionid(), output);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
        }
        // @@protoc_insertion_point(serialize_end:proto.MessageContainer.Header)
    }

    ::google::protobuf::uint8 *MessageContainer_Header::InternalSerializeWithCachedSizesToArray(
            bool deterministic, ::google::protobuf::uint8 *target) const {
        (void) deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:proto.MessageContainer.Header)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // string id = 1;
        if (this->id().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->id().data(), static_cast<int>(this->id().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.MessageContainer.Header.id");
            target =
                    ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                            1, this->id(), target);
        }

        // .proto.ActionMap actionId = 2;
        if (this->actionid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
                    2, this->actionid(), target);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:proto.MessageContainer.Header)
        return target;
    }

    size_t MessageContainer_Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MessageContainer.Header)
        size_t total_size = 0;

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            total_size +=
                    ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
        }
        // string id = 1;
        if (this->id().size() > 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->id());
        }

        // .proto.ActionMap actionId = 2;
        if (this->actionid() != 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::EnumSize(this->actionid());
        }

        int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void MessageContainer_Header::MergeFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MessageContainer.Header)
                GOOGLE_DCHECK_NE(&from, this);
        const MessageContainer_Header *source =
                ::google::protobuf::internal::DynamicCastToGenerated <const MessageContainer_Header>(
                        &from);
        if (source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MessageContainer.Header)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MessageContainer.Header)
            MergeFrom(*source);
        }
    }

    void MessageContainer_Header::MergeFrom(const MessageContainer_Header &from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MessageContainer.Header)
                GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        if (from.id().size() > 0) {

            id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
        }
        if (from.actionid() != 0) {
            set_actionid(from.actionid());
        }
    }

    void MessageContainer_Header::CopyFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MessageContainer.Header)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    void MessageContainer_Header::CopyFrom(const MessageContainer_Header &from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MessageContainer.Header)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    bool MessageContainer_Header::IsInitialized() const {
        return true;
    }

    void MessageContainer_Header::Swap(MessageContainer_Header *other) {
        if (other == this) return;
        InternalSwap(other);
    }

    void MessageContainer_Header::InternalSwap(MessageContainer_Header *other) {
        using std::swap;
        id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                 GetArenaNoVirtual());
        swap(actionid_, other->actionid_);
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata MessageContainer_Header::GetMetadata() const {
        protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages];
    }


// ===================================================================

    void MessageContainer::InitAsDefaultInstance() {
        ::proto::_MessageContainer_default_instance_._instance.get_mutable()->header_ = const_cast< ::proto::MessageContainer_Header *>(
                ::proto::MessageContainer_Header::internal_default_instance());
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int MessageContainer::kHeaderFieldNumber;
    const int MessageContainer::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

    MessageContainer::MessageContainer()
            : ::google::protobuf::Message(), _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
                &protobuf_proto_2fMessageContainer_2eproto::scc_info_MessageContainer.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:proto.MessageContainer)
    }

    MessageContainer::MessageContainer(const MessageContainer &from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (from.message().size() > 0) {
            message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
        }
        if (from.has_header()) {
            header_ = new ::proto::MessageContainer_Header(*from.header_);
        } else {
            header_ = NULL;
        }
        // @@protoc_insertion_point(copy_constructor:proto.MessageContainer)
    }

    void MessageContainer::SharedCtor() {
        message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        header_ = NULL;
    }

    MessageContainer::~MessageContainer() {
        // @@protoc_insertion_point(destructor:proto.MessageContainer)
        SharedDtor();
    }

    void MessageContainer::SharedDtor() {
        message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (this != internal_default_instance()) delete header_;
    }

    void MessageContainer::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }

    const ::google::protobuf::Descriptor *MessageContainer::descriptor() {
        ::protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
    }

    const MessageContainer &MessageContainer::default_instance() {
        ::google::protobuf::internal::InitSCC(&protobuf_proto_2fMessageContainer_2eproto::scc_info_MessageContainer.base);
        return *internal_default_instance();
    }


    void MessageContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MessageContainer)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (GetArenaNoVirtual() == NULL && header_ != NULL) {
            delete header_;
        }
        header_ = NULL;
        _internal_metadata_.Clear();
    }

    bool MessageContainer::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream *input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:proto.MessageContainer)
        for (;;) {
            ::std::pair <::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if (!p.second) goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
                // .proto.MessageContainer.Header header = 2;
                case 2: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                                input, mutable_header()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                    // bytes message = 3;
                case 3: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                                input, this->mutable_message()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                    handle_unusual:
                    if (tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                            input, tag, _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
        success:
        // @@protoc_insertion_point(parse_success:proto.MessageContainer)
        return true;
        failure:
        // @@protoc_insertion_point(parse_failure:proto.MessageContainer)
        return false;
#undef DO_
    }

    void MessageContainer::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream *output) const {
        // @@protoc_insertion_point(serialize_start:proto.MessageContainer)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // .proto.MessageContainer.Header header = 2;
        if (this->has_header()) {
            ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
                    2, this->_internal_header(), output);
        }

        // bytes message = 3;
        if (this->message().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
                    3, this->message(), output);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
        }
        // @@protoc_insertion_point(serialize_end:proto.MessageContainer)
    }

    ::google::protobuf::uint8 *MessageContainer::InternalSerializeWithCachedSizesToArray(
            bool deterministic, ::google::protobuf::uint8 *target) const {
        (void) deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:proto.MessageContainer)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // .proto.MessageContainer.Header header = 2;
        if (this->has_header()) {
            target = ::google::protobuf::internal::WireFormatLite::
            InternalWriteMessageToArray(
                    2, this->_internal_header(), deterministic, target);
        }

        // bytes message = 3;
        if (this->message().size() > 0) {
            target =
                    ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
                            3, this->message(), target);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:proto.MessageContainer)
        return target;
    }

    size_t MessageContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MessageContainer)
        size_t total_size = 0;

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            total_size +=
                    ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
        }
        // bytes message = 3;
        if (this->message().size() > 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::BytesSize(
                                  this->message());
        }

        // .proto.MessageContainer.Header header = 2;
        if (this->has_header()) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::MessageSize(
                                  *header_);
        }

        int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void MessageContainer::MergeFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MessageContainer)
                GOOGLE_DCHECK_NE(&from, this);
        const MessageContainer *source =
                ::google::protobuf::internal::DynamicCastToGenerated <const MessageContainer>(
                        &from);
        if (source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MessageContainer)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MessageContainer)
            MergeFrom(*source);
        }
    }

    void MessageContainer::MergeFrom(const MessageContainer &from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MessageContainer)
                GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        if (from.message().size() > 0) {

            message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
        }
        if (from.has_header()) {
            mutable_header()->::proto::MessageContainer_Header::MergeFrom(from.header());
        }
    }

    void MessageContainer::CopyFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MessageContainer)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    void MessageContainer::CopyFrom(const MessageContainer &from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MessageContainer)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    bool MessageContainer::IsInitialized() const {
        return true;
    }

    void MessageContainer::Swap(MessageContainer *other) {
        if (other == this) return;
        InternalSwap(other);
    }

    void MessageContainer::InternalSwap(MessageContainer *other) {
        using std::swap;
        message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                      GetArenaNoVirtual());
        swap(header_, other->header_);
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata MessageContainer::GetMetadata() const {
        protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages];
    }


// ===================================================================

    void InternalMessageContainer_Header::InitAsDefaultInstance() {
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int InternalMessageContainer_Header::kIdFieldNumber;
    const int InternalMessageContainer_Header::kActionIdFieldNumber;
    const int InternalMessageContainer_Header::kSocketIdFieldNumber;
    const int InternalMessageContainer_Header::kPartitionFieldNumber;
    const int InternalMessageContainer_Header::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

    InternalMessageContainer_Header::InternalMessageContainer_Header()
            : ::google::protobuf::Message(), _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
                &protobuf_proto_2fMessageContainer_2eproto::scc_info_InternalMessageContainer_Header.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:proto.InternalMessageContainer.Header)
    }

    InternalMessageContainer_Header::InternalMessageContainer_Header(const InternalMessageContainer_Header &from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (from.id().size() > 0) {
            id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
        }
        socketid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (from.socketid().size() > 0) {
            socketid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.socketid_);
        }
        partition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (from.partition().size() > 0) {
            partition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_);
        }
        userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (from.userid().size() > 0) {
            userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
        }
        actionid_ = from.actionid_;
        // @@protoc_insertion_point(copy_constructor:proto.InternalMessageContainer.Header)
    }

    void InternalMessageContainer_Header::SharedCtor() {
        id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        socketid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        partition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        actionid_ = 0;
    }

    InternalMessageContainer_Header::~InternalMessageContainer_Header() {
        // @@protoc_insertion_point(destructor:proto.InternalMessageContainer.Header)
        SharedDtor();
    }

    void InternalMessageContainer_Header::SharedDtor() {
        id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        socketid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        partition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    void InternalMessageContainer_Header::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }

    const ::google::protobuf::Descriptor *InternalMessageContainer_Header::descriptor() {
        ::protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
    }

    const InternalMessageContainer_Header &InternalMessageContainer_Header::default_instance() {
        ::google::protobuf::internal::InitSCC(&protobuf_proto_2fMessageContainer_2eproto::scc_info_InternalMessageContainer_Header.base);
        return *internal_default_instance();
    }


    void InternalMessageContainer_Header::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InternalMessageContainer.Header)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        socketid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        partition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        actionid_ = 0;
        _internal_metadata_.Clear();
    }

    bool InternalMessageContainer_Header::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream *input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:proto.InternalMessageContainer.Header)
        for (;;) {
            ::std::pair <::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if (!p.second) goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
                // string id = 1;
                case 1: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                                input, this->mutable_id()));
                        DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                                this->id().data(), static_cast<int>(this->id().length()),
                                ::google::protobuf::internal::WireFormatLite::PARSE,
                                "proto.InternalMessageContainer.Header.id"));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                    // .proto.ActionMap actionId = 2;
                case 2: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
                        int value;
                        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive <
                                int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                                input, &value)));
                        set_actionid(static_cast< ::proto::ActionMap >(value));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                    // string socketId = 3;
                case 3: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                                input, this->mutable_socketid()));
                        DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                                this->socketid().data(), static_cast<int>(this->socketid().length()),
                                ::google::protobuf::internal::WireFormatLite::PARSE,
                                "proto.InternalMessageContainer.Header.socketId"));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                    // string partition = 4;
                case 4: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                                input, this->mutable_partition()));
                        DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                                this->partition().data(), static_cast<int>(this->partition().length()),
                                ::google::protobuf::internal::WireFormatLite::PARSE,
                                "proto.InternalMessageContainer.Header.partition"));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                    // string userId = 5;
                case 5: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                                input, this->mutable_userid()));
                        DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                                this->userid().data(), static_cast<int>(this->userid().length()),
                                ::google::protobuf::internal::WireFormatLite::PARSE,
                                "proto.InternalMessageContainer.Header.userId"));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                    handle_unusual:
                    if (tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                            input, tag, _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
        success:
        // @@protoc_insertion_point(parse_success:proto.InternalMessageContainer.Header)
        return true;
        failure:
        // @@protoc_insertion_point(parse_failure:proto.InternalMessageContainer.Header)
        return false;
#undef DO_
    }

    void InternalMessageContainer_Header::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream *output) const {
        // @@protoc_insertion_point(serialize_start:proto.InternalMessageContainer.Header)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // string id = 1;
        if (this->id().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->id().data(), static_cast<int>(this->id().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.InternalMessageContainer.Header.id");
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                    1, this->id(), output);
        }

        // .proto.ActionMap actionId = 2;
        if (this->actionid() != 0) {
            ::google::protobuf::internal::WireFormatLite::WriteEnum(
                    2, this->actionid(), output);
        }

        // string socketId = 3;
        if (this->socketid().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->socketid().data(), static_cast<int>(this->socketid().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.InternalMessageContainer.Header.socketId");
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                    3, this->socketid(), output);
        }

        // string partition = 4;
        if (this->partition().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->partition().data(), static_cast<int>(this->partition().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.InternalMessageContainer.Header.partition");
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                    4, this->partition(), output);
        }

        // string userId = 5;
        if (this->userid().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->userid().data(), static_cast<int>(this->userid().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.InternalMessageContainer.Header.userId");
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                    5, this->userid(), output);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
        }
        // @@protoc_insertion_point(serialize_end:proto.InternalMessageContainer.Header)
    }

    ::google::protobuf::uint8 *InternalMessageContainer_Header::InternalSerializeWithCachedSizesToArray(
            bool deterministic, ::google::protobuf::uint8 *target) const {
        (void) deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:proto.InternalMessageContainer.Header)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // string id = 1;
        if (this->id().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->id().data(), static_cast<int>(this->id().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.InternalMessageContainer.Header.id");
            target =
                    ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                            1, this->id(), target);
        }

        // .proto.ActionMap actionId = 2;
        if (this->actionid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
                    2, this->actionid(), target);
        }

        // string socketId = 3;
        if (this->socketid().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->socketid().data(), static_cast<int>(this->socketid().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.InternalMessageContainer.Header.socketId");
            target =
                    ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                            3, this->socketid(), target);
        }

        // string partition = 4;
        if (this->partition().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->partition().data(), static_cast<int>(this->partition().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.InternalMessageContainer.Header.partition");
            target =
                    ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                            4, this->partition(), target);
        }

        // string userId = 5;
        if (this->userid().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->userid().data(), static_cast<int>(this->userid().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.InternalMessageContainer.Header.userId");
            target =
                    ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                            5, this->userid(), target);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:proto.InternalMessageContainer.Header)
        return target;
    }

    size_t InternalMessageContainer_Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InternalMessageContainer.Header)
        size_t total_size = 0;

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            total_size +=
                    ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
        }
        // string id = 1;
        if (this->id().size() > 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->id());
        }

        // string socketId = 3;
        if (this->socketid().size() > 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->socketid());
        }

        // string partition = 4;
        if (this->partition().size() > 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->partition());
        }

        // string userId = 5;
        if (this->userid().size() > 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->userid());
        }

        // .proto.ActionMap actionId = 2;
        if (this->actionid() != 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::EnumSize(this->actionid());
        }

        int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void InternalMessageContainer_Header::MergeFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InternalMessageContainer.Header)
                GOOGLE_DCHECK_NE(&from, this);
        const InternalMessageContainer_Header *source =
                ::google::protobuf::internal::DynamicCastToGenerated <const InternalMessageContainer_Header>(
                        &from);
        if (source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InternalMessageContainer.Header)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InternalMessageContainer.Header)
            MergeFrom(*source);
        }
    }

    void InternalMessageContainer_Header::MergeFrom(const InternalMessageContainer_Header &from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InternalMessageContainer.Header)
                GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        if (from.id().size() > 0) {

            id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
        }
        if (from.socketid().size() > 0) {

            socketid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.socketid_);
        }
        if (from.partition().size() > 0) {

            partition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_);
        }
        if (from.userid().size() > 0) {

            userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
        }
        if (from.actionid() != 0) {
            set_actionid(from.actionid());
        }
    }

    void InternalMessageContainer_Header::CopyFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InternalMessageContainer.Header)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    void InternalMessageContainer_Header::CopyFrom(const InternalMessageContainer_Header &from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InternalMessageContainer.Header)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    bool InternalMessageContainer_Header::IsInitialized() const {
        return true;
    }

    void InternalMessageContainer_Header::Swap(InternalMessageContainer_Header *other) {
        if (other == this) return;
        InternalSwap(other);
    }

    void InternalMessageContainer_Header::InternalSwap(InternalMessageContainer_Header *other) {
        using std::swap;
        id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                 GetArenaNoVirtual());
        socketid_.Swap(&other->socketid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                       GetArenaNoVirtual());
        partition_.Swap(&other->partition_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                        GetArenaNoVirtual());
        userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                     GetArenaNoVirtual());
        swap(actionid_, other->actionid_);
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata InternalMessageContainer_Header::GetMetadata() const {
        protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages];
    }


// ===================================================================

    void InternalMessageContainer::InitAsDefaultInstance() {
        ::proto::_InternalMessageContainer_default_instance_._instance.get_mutable()->header_ = const_cast< ::proto::InternalMessageContainer_Header *>(
                ::proto::InternalMessageContainer_Header::internal_default_instance());
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int InternalMessageContainer::kHeaderFieldNumber;
    const int InternalMessageContainer::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

    InternalMessageContainer::InternalMessageContainer()
            : ::google::protobuf::Message(), _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
                &protobuf_proto_2fMessageContainer_2eproto::scc_info_InternalMessageContainer.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:proto.InternalMessageContainer)
    }

    InternalMessageContainer::InternalMessageContainer(const InternalMessageContainer &from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (from.message().size() > 0) {
            message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
        }
        if (from.has_header()) {
            header_ = new ::proto::InternalMessageContainer_Header(*from.header_);
        } else {
            header_ = NULL;
        }
        // @@protoc_insertion_point(copy_constructor:proto.InternalMessageContainer)
    }

    void InternalMessageContainer::SharedCtor() {
        message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        header_ = NULL;
    }

    InternalMessageContainer::~InternalMessageContainer() {
        // @@protoc_insertion_point(destructor:proto.InternalMessageContainer)
        SharedDtor();
    }

    void InternalMessageContainer::SharedDtor() {
        message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (this != internal_default_instance()) delete header_;
    }

    void InternalMessageContainer::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }

    const ::google::protobuf::Descriptor *InternalMessageContainer::descriptor() {
        ::protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
    }

    const InternalMessageContainer &InternalMessageContainer::default_instance() {
        ::google::protobuf::internal::InitSCC(&protobuf_proto_2fMessageContainer_2eproto::scc_info_InternalMessageContainer.base);
        return *internal_default_instance();
    }


    void InternalMessageContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InternalMessageContainer)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (GetArenaNoVirtual() == NULL && header_ != NULL) {
            delete header_;
        }
        header_ = NULL;
        _internal_metadata_.Clear();
    }

    bool InternalMessageContainer::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream *input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:proto.InternalMessageContainer)
        for (;;) {
            ::std::pair <::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if (!p.second) goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
                // .proto.InternalMessageContainer.Header header = 2;
                case 2: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                                input, mutable_header()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                    // bytes message = 4;
                case 4: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                                input, this->mutable_message()));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                    handle_unusual:
                    if (tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                            input, tag, _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
        success:
        // @@protoc_insertion_point(parse_success:proto.InternalMessageContainer)
        return true;
        failure:
        // @@protoc_insertion_point(parse_failure:proto.InternalMessageContainer)
        return false;
#undef DO_
    }

    void InternalMessageContainer::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream *output) const {
        // @@protoc_insertion_point(serialize_start:proto.InternalMessageContainer)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // .proto.InternalMessageContainer.Header header = 2;
        if (this->has_header()) {
            ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
                    2, this->_internal_header(), output);
        }

        // bytes message = 4;
        if (this->message().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
                    4, this->message(), output);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
        }
        // @@protoc_insertion_point(serialize_end:proto.InternalMessageContainer)
    }

    ::google::protobuf::uint8 *InternalMessageContainer::InternalSerializeWithCachedSizesToArray(
            bool deterministic, ::google::protobuf::uint8 *target) const {
        (void) deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:proto.InternalMessageContainer)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // .proto.InternalMessageContainer.Header header = 2;
        if (this->has_header()) {
            target = ::google::protobuf::internal::WireFormatLite::
            InternalWriteMessageToArray(
                    2, this->_internal_header(), deterministic, target);
        }

        // bytes message = 4;
        if (this->message().size() > 0) {
            target =
                    ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
                            4, this->message(), target);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:proto.InternalMessageContainer)
        return target;
    }

    size_t InternalMessageContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InternalMessageContainer)
        size_t total_size = 0;

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            total_size +=
                    ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
        }
        // bytes message = 4;
        if (this->message().size() > 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::BytesSize(
                                  this->message());
        }

        // .proto.InternalMessageContainer.Header header = 2;
        if (this->has_header()) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::MessageSize(
                                  *header_);
        }

        int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void InternalMessageContainer::MergeFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InternalMessageContainer)
                GOOGLE_DCHECK_NE(&from, this);
        const InternalMessageContainer *source =
                ::google::protobuf::internal::DynamicCastToGenerated <const InternalMessageContainer>(
                        &from);
        if (source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InternalMessageContainer)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InternalMessageContainer)
            MergeFrom(*source);
        }
    }

    void InternalMessageContainer::MergeFrom(const InternalMessageContainer &from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InternalMessageContainer)
                GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        if (from.message().size() > 0) {

            message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
        }
        if (from.has_header()) {
            mutable_header()->::proto::InternalMessageContainer_Header::MergeFrom(from.header());
        }
    }

    void InternalMessageContainer::CopyFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InternalMessageContainer)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    void InternalMessageContainer::CopyFrom(const InternalMessageContainer &from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InternalMessageContainer)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    bool InternalMessageContainer::IsInitialized() const {
        return true;
    }

    void InternalMessageContainer::Swap(InternalMessageContainer *other) {
        if (other == this) return;
        InternalSwap(other);
    }

    void InternalMessageContainer::InternalSwap(InternalMessageContainer *other) {
        using std::swap;
        message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                      GetArenaNoVirtual());
        swap(header_, other->header_);
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata InternalMessageContainer::GetMetadata() const {
        protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages];
    }


// ===================================================================

    void Ack::InitAsDefaultInstance() {
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int Ack::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

    Ack::Ack()
            : ::google::protobuf::Message(), _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
                &protobuf_proto_2fMessageContainer_2eproto::scc_info_Ack.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:proto.Ack)
    }

    Ack::Ack(const Ack &from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        if (from.id().size() > 0) {
            id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
        }
        // @@protoc_insertion_point(copy_constructor:proto.Ack)
    }

    void Ack::SharedCtor() {
        id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    Ack::~Ack() {
        // @@protoc_insertion_point(destructor:proto.Ack)
        SharedDtor();
    }

    void Ack::SharedDtor() {
        id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }

    void Ack::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }

    const ::google::protobuf::Descriptor *Ack::descriptor() {
        ::protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
    }

    const Ack &Ack::default_instance() {
        ::google::protobuf::internal::InitSCC(&protobuf_proto_2fMessageContainer_2eproto::scc_info_Ack.base);
        return *internal_default_instance();
    }


    void Ack::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Ack)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
        _internal_metadata_.Clear();
    }

    bool Ack::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream *input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:proto.Ack)
        for (;;) {
            ::std::pair <::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if (!p.second) goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
                // string id = 1;
                case 1: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                        DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                                input, this->mutable_id()));
                        DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                                this->id().data(), static_cast<int>(this->id().length()),
                                ::google::protobuf::internal::WireFormatLite::PARSE,
                                "proto.Ack.id"));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                    handle_unusual:
                    if (tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                            input, tag, _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
        success:
        // @@protoc_insertion_point(parse_success:proto.Ack)
        return true;
        failure:
        // @@protoc_insertion_point(parse_failure:proto.Ack)
        return false;
#undef DO_
    }

    void Ack::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream *output) const {
        // @@protoc_insertion_point(serialize_start:proto.Ack)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // string id = 1;
        if (this->id().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->id().data(), static_cast<int>(this->id().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.Ack.id");
            ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
                    1, this->id(), output);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
        }
        // @@protoc_insertion_point(serialize_end:proto.Ack)
    }

    ::google::protobuf::uint8 *Ack::InternalSerializeWithCachedSizesToArray(
            bool deterministic, ::google::protobuf::uint8 *target) const {
        (void) deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:proto.Ack)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // string id = 1;
        if (this->id().size() > 0) {
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    this->id().data(), static_cast<int>(this->id().length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proto.Ack.id");
            target =
                    ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                            1, this->id(), target);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:proto.Ack)
        return target;
    }

    size_t Ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Ack)
        size_t total_size = 0;

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            total_size +=
                    ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
        }
        // string id = 1;
        if (this->id().size() > 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::StringSize(
                                  this->id());
        }

        int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void Ack::MergeFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Ack)
                GOOGLE_DCHECK_NE(&from, this);
        const Ack *source =
                ::google::protobuf::internal::DynamicCastToGenerated <const Ack>(
                        &from);
        if (source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Ack)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Ack)
            MergeFrom(*source);
        }
    }

    void Ack::MergeFrom(const Ack &from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Ack)
                GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        if (from.id().size() > 0) {

            id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
        }
    }

    void Ack::CopyFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Ack)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    void Ack::CopyFrom(const Ack &from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Ack)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    bool Ack::IsInitialized() const {
        return true;
    }

    void Ack::Swap(Ack *other) {
        if (other == this) return;
        InternalSwap(other);
    }

    void Ack::InternalSwap(Ack *other) {
        using std::swap;
        id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                 GetArenaNoVirtual());
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata Ack::GetMetadata() const {
        protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages];
    }


// ===================================================================

    void Ping::InitAsDefaultInstance() {
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int Ping::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

    Ping::Ping()
            : ::google::protobuf::Message(), _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
                &protobuf_proto_2fMessageContainer_2eproto::scc_info_Ping.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:proto.Ping)
    }

    Ping::Ping(const Ping &from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        time_ = from.time_;
        // @@protoc_insertion_point(copy_constructor:proto.Ping)
    }

    void Ping::SharedCtor() {
        time_ = 0;
    }

    Ping::~Ping() {
        // @@protoc_insertion_point(destructor:proto.Ping)
        SharedDtor();
    }

    void Ping::SharedDtor() {
    }

    void Ping::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }

    const ::google::protobuf::Descriptor *Ping::descriptor() {
        ::protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
    }

    const Ping &Ping::default_instance() {
        ::google::protobuf::internal::InitSCC(&protobuf_proto_2fMessageContainer_2eproto::scc_info_Ping.base);
        return *internal_default_instance();
    }


    void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Ping)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        time_ = 0;
        _internal_metadata_.Clear();
    }

    bool Ping::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream *input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:proto.Ping)
        for (;;) {
            ::std::pair <::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if (!p.second) goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
                // int32 time = 1;
                case 1: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

                        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive <
                                ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                                input, &time_)));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                    handle_unusual:
                    if (tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                            input, tag, _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
        success:
        // @@protoc_insertion_point(parse_success:proto.Ping)
        return true;
        failure:
        // @@protoc_insertion_point(parse_failure:proto.Ping)
        return false;
#undef DO_
    }

    void Ping::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream *output) const {
        // @@protoc_insertion_point(serialize_start:proto.Ping)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // int32 time = 1;
        if (this->time() != 0) {
            ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
        }
        // @@protoc_insertion_point(serialize_end:proto.Ping)
    }

    ::google::protobuf::uint8 *Ping::InternalSerializeWithCachedSizesToArray(
            bool deterministic, ::google::protobuf::uint8 *target) const {
        (void) deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:proto.Ping)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // int32 time = 1;
        if (this->time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:proto.Ping)
        return target;
    }

    size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Ping)
        size_t total_size = 0;

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            total_size +=
                    ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
        }
        // int32 time = 1;
        if (this->time() != 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::Int32Size(
                                  this->time());
        }

        int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void Ping::MergeFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Ping)
                GOOGLE_DCHECK_NE(&from, this);
        const Ping *source =
                ::google::protobuf::internal::DynamicCastToGenerated <const Ping>(
                        &from);
        if (source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Ping)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Ping)
            MergeFrom(*source);
        }
    }

    void Ping::MergeFrom(const Ping &from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Ping)
                GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        if (from.time() != 0) {
            set_time(from.time());
        }
    }

    void Ping::CopyFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Ping)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    void Ping::CopyFrom(const Ping &from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Ping)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    bool Ping::IsInitialized() const {
        return true;
    }

    void Ping::Swap(Ping *other) {
        if (other == this) return;
        InternalSwap(other);
    }

    void Ping::InternalSwap(Ping *other) {
        using std::swap;
        swap(time_, other->time_);
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata Ping::GetMetadata() const {
        protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages];
    }


// ===================================================================

    void Pong::InitAsDefaultInstance() {
    }

#if !defined(_MSC_VER) || _MSC_VER >= 1900
    const int Pong::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

    Pong::Pong()
            : ::google::protobuf::Message(), _internal_metadata_(NULL) {
        ::google::protobuf::internal::InitSCC(
                &protobuf_proto_2fMessageContainer_2eproto::scc_info_Pong.base);
        SharedCtor();
        // @@protoc_insertion_point(constructor:proto.Pong)
    }

    Pong::Pong(const Pong &from)
            : ::google::protobuf::Message(),
              _internal_metadata_(NULL) {
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        time_ = from.time_;
        // @@protoc_insertion_point(copy_constructor:proto.Pong)
    }

    void Pong::SharedCtor() {
        time_ = 0;
    }

    Pong::~Pong() {
        // @@protoc_insertion_point(destructor:proto.Pong)
        SharedDtor();
    }

    void Pong::SharedDtor() {
    }

    void Pong::SetCachedSize(int size) const {
        _cached_size_.Set(size);
    }

    const ::google::protobuf::Descriptor *Pong::descriptor() {
        ::protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
    }

    const Pong &Pong::default_instance() {
        ::google::protobuf::internal::InitSCC(&protobuf_proto_2fMessageContainer_2eproto::scc_info_Pong.base);
        return *internal_default_instance();
    }


    void Pong::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Pong)
        ::google::protobuf::uint32 cached_has_bits = 0;
        // Prevent compiler warnings about cached_has_bits being unused
        (void) cached_has_bits;

        time_ = 0;
        _internal_metadata_.Clear();
    }

    bool Pong::MergePartialFromCodedStream(
            ::google::protobuf::io::CodedInputStream *input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
        ::google::protobuf::uint32 tag;
        // @@protoc_insertion_point(parse_start:proto.Pong)
        for (;;) {
            ::std::pair <::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
            tag = p.first;
            if (!p.second) goto handle_unusual;
            switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
                // int32 time = 1;
                case 1: {
                    if (static_cast< ::google::protobuf::uint8>(tag) ==
                        static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

                        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive <
                                ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                                input, &time_)));
                    } else {
                        goto handle_unusual;
                    }
                    break;
                }

                default: {
                    handle_unusual:
                    if (tag == 0) {
                        goto success;
                    }
                    DO_(::google::protobuf::internal::WireFormat::SkipField(
                            input, tag, _internal_metadata_.mutable_unknown_fields()));
                    break;
                }
            }
        }
        success:
        // @@protoc_insertion_point(parse_success:proto.Pong)
        return true;
        failure:
        // @@protoc_insertion_point(parse_failure:proto.Pong)
        return false;
#undef DO_
    }

    void Pong::SerializeWithCachedSizes(
            ::google::protobuf::io::CodedOutputStream *output) const {
        // @@protoc_insertion_point(serialize_start:proto.Pong)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // int32 time = 1;
        if (this->time() != 0) {
            ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
        }
        // @@protoc_insertion_point(serialize_end:proto.Pong)
    }

    ::google::protobuf::uint8 *Pong::InternalSerializeWithCachedSizesToArray(
            bool deterministic, ::google::protobuf::uint8 *target) const {
        (void) deterministic; // Unused
        // @@protoc_insertion_point(serialize_to_array_start:proto.Pong)
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        // int32 time = 1;
        if (this->time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
        }

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
                    (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
        }
        // @@protoc_insertion_point(serialize_to_array_end:proto.Pong)
        return target;
    }

    size_t Pong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Pong)
        size_t total_size = 0;

        if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
            total_size +=
                    ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
                            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
        }
        // int32 time = 1;
        if (this->time() != 0) {
            total_size += 1 +
                          ::google::protobuf::internal::WireFormatLite::Int32Size(
                                  this->time());
        }

        int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
        SetCachedSize(cached_size);
        return total_size;
    }

    void Pong::MergeFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Pong)
                GOOGLE_DCHECK_NE(&from, this);
        const Pong *source =
                ::google::protobuf::internal::DynamicCastToGenerated <const Pong>(
                        &from);
        if (source == NULL) {
            // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Pong)
            ::google::protobuf::internal::ReflectionOps::Merge(from, this);
        } else {
            // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Pong)
            MergeFrom(*source);
        }
    }

    void Pong::MergeFrom(const Pong &from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Pong)
                GOOGLE_DCHECK_NE(&from, this);
        _internal_metadata_.MergeFrom(from._internal_metadata_);
        ::google::protobuf::uint32 cached_has_bits = 0;
        (void) cached_has_bits;

        if (from.time() != 0) {
            set_time(from.time());
        }
    }

    void Pong::CopyFrom(const ::google::protobuf::Message &from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Pong)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    void Pong::CopyFrom(const Pong &from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Pong)
        if (&from == this) return;
        Clear();
        MergeFrom(from);
    }

    bool Pong::IsInitialized() const {
        return true;
    }

    void Pong::Swap(Pong *other) {
        if (other == this) return;
        InternalSwap(other);
    }

    void Pong::InternalSwap(Pong *other) {
        using std::swap;
        swap(time_, other->time_);
        _internal_metadata_.Swap(&other->_internal_metadata_);
    }

    ::google::protobuf::Metadata Pong::GetMetadata() const {
        protobuf_proto_2fMessageContainer_2eproto::protobuf_AssignDescriptorsOnce();
        return ::protobuf_proto_2fMessageContainer_2eproto::file_level_metadata[kIndexInFileMessages];
    }


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
    namespace protobuf {
        template <>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::MessageContainer_Header *Arena::CreateMaybeMessage <::proto::MessageContainer_Header>(Arena *arena) {
            return Arena::CreateInternal <::proto::MessageContainer_Header>(arena);
        }

        template <>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::MessageContainer *Arena::CreateMaybeMessage <::proto::MessageContainer>(Arena *arena) {
            return Arena::CreateInternal <::proto::MessageContainer>(arena);
        }

        template <>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::InternalMessageContainer_Header *Arena::CreateMaybeMessage <::proto::InternalMessageContainer_Header>(Arena *arena) {
            return Arena::CreateInternal <::proto::InternalMessageContainer_Header>(arena);
        }

        template <>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::InternalMessageContainer *Arena::CreateMaybeMessage <::proto::InternalMessageContainer>(Arena *arena) {
            return Arena::CreateInternal <::proto::InternalMessageContainer>(arena);
        }

        template <>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::Ack *Arena::CreateMaybeMessage <::proto::Ack>(Arena *arena) {
            return Arena::CreateInternal <::proto::Ack>(arena);
        }

        template <>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::Ping *Arena::CreateMaybeMessage <::proto::Ping>(Arena *arena) {
            return Arena::CreateInternal <::proto::Ping>(arena);
        }

        template <>
        GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::Pong *Arena::CreateMaybeMessage <::proto::Pong>(Arena *arena) {
            return Arena::CreateInternal <::proto::Pong>(arena);
        }
    }  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
