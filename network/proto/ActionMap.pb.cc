// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/ActionMap.proto

#include "ActionMap.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace proto {
}  // namespace proto
namespace protobuf_proto_2fActionMap_2eproto {
    void InitDefaults() {
    }

    const ::google::protobuf::EnumDescriptor *file_level_enum_descriptors[1];
    const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
    static const ::google::protobuf::internal::MigrationSchema *schemas = NULL;
    static const ::google::protobuf::Message *const *file_default_instances = NULL;

    void protobuf_AssignDescriptors() {
        AddDescriptors();
        AssignDescriptors(
                "proto/ActionMap.proto", schemas, file_default_instances, TableStruct::offsets,
                NULL, file_level_enum_descriptors, NULL);
    }

    void protobuf_AssignDescriptorsOnce() {
        static ::google::protobuf::internal::once_flag once;
        ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
    }

    void protobuf_RegisterTypes(const ::std::string &) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;

    void protobuf_RegisterTypes(const ::std::string &) {
        protobuf_AssignDescriptorsOnce();
    }

    void AddDescriptorsImpl() {
        InitDefaults();
        static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
                "\n\025proto/ActionMap.proto\022\005proto*\370\010\n\tActio"
                "nMap\022\022\n\016ERROR_RESPONSE\020\000\022\020\n\014CLIENT_HELLO"
                "\020\001\022\020\n\014SERVER_HELLO\020\002\022\023\n\017CLIENT_SECURITY\020"
                "\003\022\034\n\030CLIENT_SECURITY_RESPONSE\020\004\022\007\n\003ACK\020\005"
                "\022\010\n\004PING\020\006\022\010\n\004PONG\020\007\022\027\n\022AUTH_LOGIN_REQUE"
                "ST\020\200 \022\030\n\023AUTH_LOGIN_RESPONSE\020\201 \022\032\n\025AUTH_"
                "REGISTER_REQUEST\020\202 \022\033\n\026AUTH_REGISTER_RES"
                "PONSE\020\203 \022&\n!AUTH_OBTAINING_PERMISSION_RE"
                "QUEST\020\204 \022\'\n\"AUTH_OBTAINING_PERMISSION_RE"
                "SPONSE\020\205 \022\035\n\030AUTH_ASSIGN_ROLE_REQUEST\020\206 "
                "\022\036\n\031AUTH_ASSIGN_ROLE_RESPONSE\020\207 \022\033\n\026AUTH"
                "_GET_ROLES_REQUEST\020\210 \022\034\n\027AUTH_GET_ROLES_"
                "RESPONSE\020\211 \022%\n AUTH_PASSWORD_RESET_CODE_"
                "REQUEST\020\212 \022&\n!AUTH_PASSWORD_RESET_CODE_R"
                "ESPONSE\020\213 \022!\n\034AUTH_UPDATE_PASSWORD_REQUE"
                "ST\020\214 \022\"\n\035AUTH_UPDATE_PASSWORD_RESPONSE\020\215"
                " \022\027\n\022AUTH_TOKEN_REQUEST\020\216 \022\030\n\023AUTH_TOKEN"
                "_RESPONSE\020\217 \022 \n\033CREATE_ORGANIZATION_REQU"
                "EST\020\200@\022!\n\034CREATE_ORGANIZATION_RESPONSE\020\201"
                "@\022\036\n\031EDIT_ORGANIZATION_REQUEST\020\202@\022\037\n\032EDI"
                "T_ORGANIZATION_RESPONSE\020\203@\022\"\n\035EDIT_ALL_O"
                "RGANIZATION_REQUEST\020\204@\022#\n\036EDIT_ALL_ORGAN"
                "IZATION_RESPONSE\020\205@\022 \n\033DELETE_ORGANIZATI"
                "ON_REQUEST\020\206@\022!\n\034DELETE_ORGANIZATION_RES"
                "PONSE\020\207@\022$\n\037DELETE_ALL_ORGANIZATION_REQU"
                "EST\020\210@\022%\n DELETE_ALL_ORGANIZATION_RESPON"
                "SE\020\211@\022\035\n\030GET_ORGANIZATION_REQUEST\020\212@\022\036\n\031"
                "GET_ORGANIZATION_RESPONSE\020\213@\022 \n\033GET_V2_O"
                "RGANIZATION_REQUEST\020\214@\022!\n\034GET_V2_ORGANIZ"
                "ATION_RESPONSE\020\215@B\020\n\016org.elec.protob\006pro"
                "to3"
        };
        ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
                descriptor, 1203);
        ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
                "proto/ActionMap.proto", &protobuf_RegisterTypes);
    }

    void AddDescriptors() {
        static ::google::protobuf::internal::once_flag once;
        ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
    }

// Force AddDescriptors() to be called at dynamic initialization time.
    struct StaticDescriptorInitializer {
        StaticDescriptorInitializer() {
            AddDescriptors();
        }
    } static_descriptor_initializer;
}  // namespace protobuf_proto_2fActionMap_2eproto
namespace proto {
    const ::google::protobuf::EnumDescriptor *ActionMap_descriptor() {
        protobuf_proto_2fActionMap_2eproto::protobuf_AssignDescriptorsOnce();
        return protobuf_proto_2fActionMap_2eproto::file_level_enum_descriptors[0];
    }

    bool ActionMap_IsValid(int value) {
        switch (value) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 4096:
            case 4097:
            case 4098:
            case 4099:
            case 4100:
            case 4101:
            case 4102:
            case 4103:
            case 4104:
            case 4105:
            case 4106:
            case 4107:
            case 4108:
            case 4109:
            case 4110:
            case 4111:
            case 8192:
            case 8193:
            case 8194:
            case 8195:
            case 8196:
            case 8197:
            case 8198:
            case 8199:
            case 8200:
            case 8201:
            case 8202:
            case 8203:
            case 8204:
            case 8205:
                return true;
            default:
                return false;
        }
    }


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
    namespace protobuf {
    }  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
